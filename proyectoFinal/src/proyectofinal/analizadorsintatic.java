/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal;

import java.util.LinkedList;
import javax.swing.JOptionPane;
import pila.estado;
import pila.matriz;

/**
 *
 * @author jhonny
 */
public class analizadorsintatic extends javax.swing.JFrame {

    /**
     * Creates new form analizadorsintatic
     */
    public analizadorsintatic() {
        initComponents();
      matriz.matriz =new estado[27][38];
      matriz.matrizvariables();
      matriz.llenar();
      
      getfunction();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        jLabel1.setText("ANALIZADOR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(analizadorsintatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(analizadorsintatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(analizadorsintatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(analizadorsintatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new analizadorsintatic().setVisible(true);
            }
        });
    }

    private void getfunction() {
    LinkedList<estado> list=new LinkedList();   
    estado tmporal=new estado();
    LinkedList<String> lists=new LinkedList();   
    LinkedList<String> lists2=new LinkedList();   
  
   lists.push("$");
   lists.push("A");
   
 
   
   
   boolean pila=true;
     lists2.push("$");
  
for(int i=analizador.lista.size()-1; i>=0;i--){

   try{
   int a=Integer.parseInt(analizador.tmp.get(i).getLetra());
   lists2.push("numero");
   }catch(Exception e){
    try{
 float flotante = Float.parseFloat(analizador.tmp.get(i).getLetra());
   lists2.push("flotante");
   }catch(Exception es){
   try{
      if(analizador.tmp.get(i).getToken().equals("Identificador")){
      if(reservadas(analizador.tmp.get(i).getLetra())){
      lists2.push(analizador.tmp.get(i).getLetra());

      }else{
       lists2.push("Identificador");
     }
      }else{
      lists2.push(analizador.tmp.get(i).getLetra());

      }
   }catch(Exception s){}
   }
   }
}
  
     int count=0;
boolean valids=true;
       
  
     while(pila && valids) {

     if(lists.size()<=0){
        pila=false;
        }
  

            for(int i=0; i<27;i++){
            for(int j=0; j<38;j++){
                try{
                if(lists.get(0).equals(lists2.get(0))){
                    valids=true;
                    System.out.println(lists.get(0)+" "+ lists2.get(0));
              
                lists.pop();
                lists2.pop();
                
                }}catch(IndexOutOfBoundsException e){}
                
                try{
                    
                if(matriz.matriz[i][j].getEstado().equals(lists.get(0)) && 
                matriz.matriz[i][j].getTipo().equals(lists2.get(0))){
                   count=1;
                    
                if(landa(matriz.matriz[i][j].getCod())){
                lists.pop();
               }
              
                else{
                    
                String arrayt[]=matriz.matriz[i][j].getCod().split(" ");
                
                
                lists.pop();
                
                for(int k=arrayt.length-1; k>=0;k--){
                    lists.push(arrayt[k]);
                 }
                 
                       
                
                }
                
              
         }else{valids=false;}
                }catch(NullPointerException e){
             
             
        }catch(IndexOutOfBoundsException e){}
            
            }
            }
  
       }
    
    System.out.println(lists2.size()+" "+lists.size());

        
      
        if(lists2.size()<= 0 && lists.size()<=0){
        JOptionPane.showMessageDialog(this,"La cadena es valida");
        
        }else{
        JOptionPane.showMessageDialog(this,"No es valida Error en "+lists2.get(0));
        
        }
        
    this.setVisible(false);
   
     
      
    }
    
    private boolean noTerminal(String cad){
    boolean validar=true;
    String array[]={"A","B","C","D","E","F","G","H","I","J","K","L",
    "M","N","Ñ","O","P","Q","R","S","T","U","V","W","X","Y","Z"};
    
    
    return validar;
    
    }
    
       private boolean landa(String cad){
    boolean validar=false;
    if(cad.equals("landa")){
    validar=true;
    }
    
    return validar;}
        public static boolean  reservadas(String c){
   boolean valid=false;
   String reservadas[]={"funcion","principal","retornar","vacio",
       "carácter","para","variable","VERDADERO","FALSO","entero","decimal","booleano","cadena"
           ,"carácter","si","sino","mientras","hacer","{","}","(",")"
        };
       for (String reservada : reservadas) {
           if (reservada.equals(c)) {
             valid=true;
           }
       }
        
return valid;        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
